 -  image: Asankhaya.jpg
    name: Asankhaya Sharma
    title: Using LLMs and Generative AI to Fix Software Vulnerabilities
    bio: >-
        Dr. Asankhaya Sharma is the co-founder and Chief Technology Officer at Patched.codes, a deep-tech startup with the vision to automatically fix 
        every software vulnerability in code. Dr. Sharma is a well known technology expert, author, and public speaker. He has more than 15 years of 
        experience in the technology and software development fields holding technical leadership roles at startups and large enterprises.

        Prior to Patched.codes he was the global director of innovation and incubation at Veracode, an application security company. Before that, he was 
        the head of R&D at SourceClear, acquired by CA Technologies in 2018, the first software security company focussed on open-source security and 
        software supply chain.

        He has a PhD in Computer Science from the National University of Singapore, NUS, and has been an Adjunct Professor at the Singapore Management
        University, SMU, and the Singapore Institute of Technology, SIT.
    subject: 
    abstract: >-
        Large enterprises struggle with software vulnerabilities; complex systems, slow patching, and poor risk prioritisation lead to security weaknesses, 
        breaches, and data exposure. In this talk, we will show how one can leverage recent advances in LLMs and generative AI to create and validate private, 
        secure and multiple file fixes that rival even expert developers. State of the art, SOTA, AI open-source models, like StarCoder, for code generation 
        and assistance can enable enterprises to securely and privately remediate vulnerabilities in applications without worrying about risks of using OpenAI 
        APIs. We can now empower security and operations teams to go beyond monitoring and finding issues to being able to actually fix them, even when they do 
        not have developer experience or access. In the near future, we foresee a world where developers are no longer the sole bearers of the application security 
        burden - A DevLess, developer-less, Security world.
